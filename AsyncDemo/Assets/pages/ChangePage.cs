// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using KiiCorp.Cloud.Storage;

using UnityEngine;
using System;

public class ChangePage : BasePage, IPage
{
	// Change Password
	private Rect oldPasswordTextRect = new Rect(0, 128, 320, 64);
	private string oldPassword = "";
	private Rect newPasswordTextRect = new Rect(0, 192, 320, 64);
	private string newPassword = "";
	private Rect changePasswordButtonRect = new Rect(320, 192, 320, 64);
	
	// Change Email
	private Rect newEmailTextRect = new Rect(0, 256, 320, 64);
	private string newEmail = "";
	private Rect changeEmailButtonRect = new Rect(320, 256, 320, 64);
	
	// Change Phone
	private Rect newPhoneTextRect = new Rect(0, 320, 320, 64);
	private string newPhone = "";
	private Rect changePhoneButtonRect = new Rect(320, 320, 320, 64);

	public ChangePage (MainCamera camera) : base(camera)

	{
	
	}

	#region IPage implementation

	public void OnGUI ()
	{
		GUI.Label(messageRect, message);
		oldPassword = GUI.TextField(oldPasswordTextRect, oldPassword);
		newPassword = GUI.TextField(newPasswordTextRect, newPassword);
		newEmail = GUI.TextField(newEmailTextRect, newEmail);
		newPhone = GUI.TextField(newPhoneTextRect, newPhone);

		GUI.enabled = ButtonEnabled;
		bool backClicked = GUI.Button(backButtonRect, "<");
		bool changePasswordClicked = GUI.Button(changePasswordButtonRect, "Change Password");
		bool changeEmailClicked = GUI.Button(changeEmailButtonRect, "Change email");
		bool changePhoneClicked = GUI.Button(changePhoneButtonRect, "Change phone");
		GUI.enabled = true;

		if (backClicked)
		{
			PerformBack();
			return;
		}
		if (changePasswordClicked)
		{
			PerformChangePassword(oldPassword, newPassword);
			return;
		}
		if (changeEmailClicked)
		{
			PerformChangeEmail(newEmail);
			return;
		}
		if (changePhoneClicked)
		{
			PerformChangePhone(newPhone);
			return;
		}

	}

	void PerformChangePassword (string oldPassword, string newPassword)
	{
		message = "Changing password...";
		ButtonEnabled = false;
		
		KiiUser.ChangePassword(newPassword, oldPassword, (Exception e) =>
		                       {
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to change password " + e.ToString();
				return;
			}
			PerformBack();
		});
	}
	
	void PerformChangeEmail (string newEmail)
	{
		message = "Changing email...";
		ButtonEnabled = false;
		
		KiiUser.ChangeEmail(newEmail, (Exception e) =>
		                    {
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to change email " + e.ToString();
				return;
			}
			message = "Change email succeeded";
		});
	}
	
	void PerformChangePhone (string newPhone)
	{
		message = "Changing phone...";
		ButtonEnabled = false;
		
		KiiUser.ChangePhone(newPhone, (Exception e) =>
		                    {
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to change phone " + e.ToString();
				return;
			}
			message = "Change phone succeeded";
		});
	}
	#endregion
}

