// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using KiiCorp.Cloud.Storage;

using UnityEngine;
using System;
using System.Collections.Generic;

public class GroupPage : BasePage, IPage
{

	// List groups
	private Rect listButtonRect = new Rect(0, 128, 320, 64);

	// Create group
	private Rect nameTextRect = new Rect(0, 192, 320, 64);
	private string name = "";
	private Rect createButtonRect = new Rect(320, 192, 320, 64);

	private IList<KiiGroup> groups = new List<KiiGroup>();
	
	public GroupPage (MainCamera camera) : base(camera)
	{
	}

	#region IPage implementation

	public void OnGUI ()
	{
		GUI.Label(messageRect, message);
		name = GUI.TextField(nameTextRect, name);

		GUI.enabled = ButtonEnabled;
		bool backClicked = GUI.Button(backButtonRect, "<");
		bool listGroupClicked = GUI.Button(listButtonRect, "List");
		bool createGroupClicked = GUI.Button(createButtonRect, "Create");
		for (int i = 0 ; i < groups.Count ; ++i)
		{
			if (GUI.Button(new Rect(0, i * 64 + 320, 640, 64), groups[i].Name))
			{
				// show group menu
				ShowGroupMenuPage(groups[i]);
				return;
			}
		}
		GUI.enabled = true;

		if (backClicked)
		{
			PerformBack();
			return;
		}
		if (listGroupClicked)
		{
			PerformList();
			return;
		}
		if (createGroupClicked)
		{
			PerformCreateGroup(name);
			return;
		}

	}
	
	void PerformList ()
	{
		message = "Getting groups...";
		ButtonEnabled = false;

		KiiUser.CurrentUser.MemberOfGroups((IList<KiiGroup> list, Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to list groups " + e.ToString();
				return;
			}
			groups = list;
			message = "List group succeeded";
		});
	}

	void PerformCreateGroup (string name)
	{
		message = "Creating group...";
		ButtonEnabled = false;

		if (name == null || name.Length == 0) {
			message = "Group name is null";
			ButtonEnabled = true;
			return;
		}
		KiiGroup group = Kii.Group(name);
		group.Save((KiiGroup newGroup, Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to create group " + e.ToString();
				return;
			}
			message = "Create group succeeded";
		});
	}

	void ShowGroupMenuPage (KiiGroup group)
	{
		camera.PushPage(new GroupMenuPage(camera, group));
	}

	#endregion
}

