// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using KiiCorp.Cloud.Storage;

using UnityEngine;
using System;

public class UserPage : BasePage, IPage
{

	// Refresh
	private Rect refreshButtonRect = new Rect(0, 128, 320, 64);
	
	// Delete
	private Rect deleteButtonRect = new Rect(320, 128, 320, 64);

	// Update
	private Rect updateTextRect = new Rect(0, 192, 320, 64);
	private string userComment = "";
	private Rect updateButtonRect = new Rect(320, 192, 320, 64);


	// Reset Password
	private Rect resetPasswordTextRect = new Rect(0, 256, 320, 64);
	private string usernameForReset = "";
	private Rect resetPasswordButton = new Rect(320, 256, 320, 64);

	// Request Resend email verification
	private Rect resendEmailButtonRect = new Rect(0, 320, 320, 64);

	// Request Resend phone verification
	private Rect resendPhoneButtonRect = new Rect(320, 320, 320, 64);

	// Verify phone
	private Rect verificationCodeTextRect = new Rect(0, 384, 320, 64);
	private string verificationCode = "";
	private Rect verifyPhoneButtonRect = new Rect(320, 384, 320, 64);



	private bool buttonEnable = true;

	public UserPage (MainCamera camera) : base(camera)
	{
	}

	#region IPage implementation
	public void OnGUI ()
	{
		GUI.Label(messageRect, message);
		userComment = GUI.TextField(updateTextRect, userComment);
		usernameForReset = GUI.TextField(resetPasswordTextRect, usernameForReset);
		verificationCode = GUI.TextField(verificationCodeTextRect, verificationCode);

		GUI.enabled = buttonEnable;
		bool backClicked = GUI.Button(backButtonRect, "<");
		bool updateClicked = GUI.Button(updateButtonRect, "Update");
		bool refreshClicked = GUI.Button(refreshButtonRect, "Refresh");
		bool deleteClicked = GUI.Button(deleteButtonRect, "Delete");
		bool resetPasswordClicked = GUI.Button(resetPasswordButton, "Reset Password");
		bool resendEmailClicked = GUI.Button(resendEmailButtonRect, "Resend Email");
		bool resendPhoneClicked = GUI.Button(resendPhoneButtonRect, "Resend Phone");
		bool verifyPhoneClicked = GUI.Button(verifyPhoneButtonRect, "Verify Phone");
		GUI.enabled = true;

		if (backClicked)
		{
			PerformBack();
			return;
		}
		if (updateClicked)
		{
			PerformUpdate(userComment);
			return;
		}
		if (refreshClicked)
		{
			PerformRefresh();
			return;
		}
		if (deleteClicked)
		{
			PerformDelete();
			return;
		}
		if (resetPasswordClicked)
		{
			PerformResetPassword(usernameForReset);
			return;
		}
		if (resendEmailClicked)
		{
			PerformResendEmail();
			return;
		}
		if (resendPhoneClicked)
		{
			PerformResendPhone();
			return;
		}
		if (verifyPhoneClicked)
		{
			PerformVerifyPhone(verificationCode);
			return;
		}
	}
	#endregion

	void PerformUpdate (string userComment)
	{
		KiiUser.CurrentUser["comment"] = userComment;

		message = "Updating...";
		ButtonEnabled = false;

		KiiUser.CurrentUser.Update((KiiUser user, Exception e) =>
		{
			buttonEnable = true;
			if (e != null)
			{
				message = "Failed to update " + e.ToString();
				return;
			}
			message = "Update succeeded";
		});
	}

	void PerformRefresh ()
	{
		message = "Refreshing...";
		ButtonEnabled = false;

		KiiUser.CurrentUser.Refresh((KiiUser user, Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to refresh " + e.ToString();
				return;
			}
			if (user.Has("comment")) {
				message = "Refresh is done comment=" + user["comment"];
			} else {
				message = "Refresh is done";
			}
		});
	}

	void PerformDelete ()
	{
		message = "Deleting this user...";
		ButtonEnabled = false;

		KiiUser.CurrentUser.Delete((Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to delete this user " + e.ToString();
				return;
			}
			PerformBack();
		});
	}

	void PerformResetPassword (string username)
	{
		message = "Resetting password...";
		ButtonEnabled = false;

		KiiUser.ResetPassword(username, (Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to reset password " + e.ToString();
				return;
			}
			message = "Reset Password succeeded";
		});

	}

	void PerformResendEmail ()
	{
		message = "Request Resend Email...";
		ButtonEnabled = false;

		KiiUser.RequestResendEmailVerification((Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to Resend email " + e.ToString();
				return;
			}
			message = "Resend email succeeded";
		});
	}

	void PerformResendPhone ()
	{
		message = "Request Resend Phone...";
		ButtonEnabled = false;

		KiiUser.RequestResendPhoneVerificationCode((Exception e) =>
		{
			ButtonEnabled = true;
			if (e != null)
			{
				message = "Failed to Resend phone " + e.ToString();
				return;
			}
			message = "Resend phpne succeeded";
		});
	}

	void PerformVerifyPhone (string verificationCode)
	{
		message = "Verify Phone...";
		ButtonEnabled = false;

		KiiUser.CurrentUser.VerifyPhone(verificationCode, (KiiUser user, Exception e) =>
		{
			buttonEnable = true;
			if (e != null)
			{
				message = "Failed to verify phone " + e.ToString();
				return;
			}
			message = "Verify Phone succeeded";
		});
	}

}

